//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.1.21.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------
using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Spatial;
using Elements.Validators;
using Elements.Serialization.JSON;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace Elements.Fittings
{
    #pragma warning disable // Disable all warnings

    /// <summary>An element that connects segments in a FittingTree.</summary>
    [JsonConverter(typeof(Elements.Serialization.JSON.JsonInheritanceConverter), "discriminator")]
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Fitting : ComponentBase
    {
        [JsonConstructor]
        public Fitting(bool @canBeMoved, FittingLocator @componentLocator, Transform @transform, Material @material, Representation @representation, bool @isElementDefinition, System.Guid @id, string @name)
            : base(componentLocator, transform, material, representation, isElementDefinition, id, name)
        {
            this.CanBeMoved = @canBeMoved;
            }
        
        // Empty constructor
        public Fitting()
            : base()
        {
        }
    
        /// <summary>Indicates if the connection can be moved. Used by functions to mark objects for overriding.</summary>
        [JsonProperty("CanBeMoved", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool CanBeMoved { get; set; }
    
    
    }
}
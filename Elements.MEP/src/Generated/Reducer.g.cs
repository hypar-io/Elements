//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.1.21.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------
using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Spatial;
using Elements.Validators;
using Elements.Serialization.JSON;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace Elements.Fittings
{
    #pragma warning disable // Disable all warnings

    /// <summary>A Fitting that can reduce the diameter of the pipe passing through.</summary>
    [JsonConverter(typeof(Elements.Serialization.JSON.JsonInheritanceConverter), "discriminator")]
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Reducer : Fitting
    {
        [JsonConstructor]
        public Reducer(Port @start, Port @end, PressureCalculationReducer @pressureCalculations, bool @canBeMoved, FittingLocator @componentLocator, Transform @transform, Material @material, Representation @representation, bool @isElementDefinition, System.Guid @id, string @name)
            : base(canBeMoved, componentLocator, transform, material, representation, isElementDefinition, id, name)
        {
            this.Start = @start;
            this.End = @end;
            this.PressureCalculations = @pressureCalculations;
            }
        
        // Empty constructor
        public Reducer()
            : base()
        {
        }
    
        /// <summary>One end connector of the coupling.</summary>
        [JsonProperty("Start", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Port Start { get; set; }
    
        /// <summary>The other end of the reducer.</summary>
        [JsonProperty("End", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Port End { get; set; }
    
        /// <summary>Pressure calcs</summary>
        [JsonProperty("Pressure Calculations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PressureCalculationReducer PressureCalculations { get; set; }
    
    
    }
}
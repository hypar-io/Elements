//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.1.21.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------
using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Spatial;
using Elements.Validators;
using Elements.Serialization.JSON;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace Elements
{
    #pragma warning disable // Disable all warnings

    [JsonConverter(typeof(Elements.Serialization.JSON.JsonInheritanceConverter), "discriminator")]
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class RoofDrain : GeometricElement
    {
        [JsonConstructor]
        public RoofDrain(double @diameter, double @drainageRate, int @lowLineIndex, double @positionParameter, bool @isFollower, double @waterHeight, string @roofSection, Transform @transform = null, Material @material = null, Representation @representation = null, bool @isElementDefinition = false, System.Guid @id = default, string @name = null)
            : base(transform, material, representation, isElementDefinition, id, name)
        {
            this.Diameter = @diameter;
            this.DrainageRate = @drainageRate;
            this.LowLineIndex = @lowLineIndex;
            this.PositionParameter = @positionParameter;
            this.IsFollower = @isFollower;
            this.WaterHeight = @waterHeight;
            this.RoofSection = @roofSection;
            }
        
        // Empty constructor
        public RoofDrain()
            : base()
        {
        }
    
        /// <summary>The diameter of the roof drain.</summary>
        [JsonProperty("Diameter", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Diameter { get; set; }
    
        /// <summary>The drainage rate of this drain</summary>
        [JsonProperty("Drainage Rate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double DrainageRate { get; set; }
    
        /// <summary>The index of the lowline, in the Roof Section's list of Low Lines, that contains this roof drain.</summary>
        [JsonProperty("Low Line Index", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int LowLineIndex { get; set; }
    
        /// <summary>The normalized parameter of this roof drain's location in the lowline.</summary>
        [JsonProperty("Position Parameter", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double PositionParameter { get; set; }
    
        /// <summary>This roof drain follows the relataive position of an original roof drain to its drainable section.</summary>
        [JsonProperty("IsFollower", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool IsFollower { get; set; }
    
        /// <summary>The design height of water at the Drainage Rate.</summary>
        [JsonProperty("WaterHeight", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double WaterHeight { get; set; }
    
        /// <summary>The ID of the associated DrainableRoofSection</summary>
        [JsonProperty("Roof Section", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RoofSection { get; set; }
    
    
    }
}
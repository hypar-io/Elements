//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.1.4.0 (Newtonsoft.Json v12.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------
using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Properties;
using Elements.Validators;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace Elements
{
    #pragma warning disable // Disable all warnings

    /// <summary>A list of Vector3s with a name.</summary>
[Newtonsoft.Json.JsonConverter(typeof(Elements.Serialization.JSON.JsonInheritanceConverter), "discriminator")]
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.4.0 (Newtonsoft.Json v12.0.0.0)")]
[UserElement]
	public partial class ModelPoints : GeometricElement
{
    [Newtonsoft.Json.JsonConstructor]
    public ModelPoints(IList<Vector3> @Locations, Transform @Transform, Material @Material, Representation @Representation, bool @IsElementDefinition, System.Guid @Id, string @Name)
        : base(Transform, Material, Representation, IsElementDefinition, Id, Name)
    {
        var validator = Validator.Instance.GetFirstValidatorForType<ModelPoints>();
        if(validator != null)
        {
            validator.PreConstruct(new object[]{ @Locations, @Transform, @Material, @Representation, @IsElementDefinition, @Id, @Name});
        }
    
        this.Locations = @Locations;
    
        if(validator != null)
        {
            validator.PostConstruct(this);
        }
    }

    /// <summary>The locations in this model point set.</summary>
    [Newtonsoft.Json.JsonProperty("Locations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public IList<Vector3> Locations { get; set; }


}
}
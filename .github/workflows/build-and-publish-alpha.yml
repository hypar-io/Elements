name: Tag and Publish Alpha

on:
  push:
    branches:
      - master

jobs:
  build-bump-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Get previous tag.
        id: version
        uses: "WyriHaximus/github-action-get-previous-tag@master"
      - name: Bump if alpha.
        if: ${{contains(steps.version.outputs.tag, 'alpha')}}
        id: bump-alpha
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{steps.version.outputs.tag}}
          version-fragment: "alpha"
      - name: Set NuGet version from alpha.
        if: ${{contains(steps.version.outputs.tag, 'alpha')}}
        run: echo "NUGET_VERSION=${{steps.bump-alpha.outputs.next-version}}" >> $GITHUB_ENV
      - name: Bump if beta.
        if: ${{contains(steps.version.outputs.tag, 'beta')}}
        id: bump-beta
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{steps.version.outputs.tag}}
          version-fragment: "beta"
      - name: Set NuGet version from beta.
        if: ${{contains(steps.version.outputs.tag, 'beta')}}
        run: echo "NUGET_VERSION=${{steps.bump-beta.outputs.next-version}}" >> $GITHUB_ENV
      - name: Set NuGet version as first alpha if previous tag is a main release
        if: ${{!contains(steps.version.outputs.tag, 'beta') && !contains(steps.version.outputs.tag, 'alpha')}}
        run: echo "NUGET_VERSION=${{steps.version.outputs.tag}}-alpha1" >> $GITHUB_ENV
      - run: dotnet build -c release -p:Version=${{ env.NUGET_VERSION }}
      - name: Publish NuGet package.
        run: |
          dotnet nuget push ./nupkg/Hypar.Elements.${{ env.NUGET_VERSION }}.nupkg -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}}
          dotnet nuget push ./nupkg/Hypar.Elements.CodeGeneration.${{ env.NUGET_VERSION }}.nupkg -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}}
          dotnet nuget push ./nupkg/Hypar.Elements.Serialization.IFC.${{ env.NUGET_VERSION }}.nupkg -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}}
      - name: Create alpha tag.
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.bump-alpha.outputs.next-version }}
